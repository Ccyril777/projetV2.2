{% extends 'base.html.twig' %}

{% block title %}Classeur{% endblock %}

{% block body %}

{% include 'toolbar/toolbar.html.twig' %}
<!--Création du tableau aggrid-->
<div id="myGrid" style="height: 50rem; width:auto;" class="ag-theme-balham"></div>

{% endblock %}

{% block js %}
<script src="{{ asset('jsuite/jsuites.js') }}"></script>
<script src="{{ asset('aggrid/ag-grid-enterprise.min.js') }}"></script>
<script src="{{ asset('aggrid/main.js') }}"></script>

<script>
// Fonction permettant à Ag-Grid de récupérer les domaines, depuis la base de données
function DomEditor() {
	this.data = [
		{% for domaine in domaines %}
		{ id:'{{ domaine.id }}', name:'{{ domaine.domaineName }}' },
		{% endfor %}
	];

	this.confEditor = {
		data:this.data,
		type:'default',
		autocomplete:true,
		multiple:false,
	};
}

DomEditor.prototype = new ObjectEditor();
</script>

<script>
// Fonction permettant à Ag-Grid de récupérer les confidentalités, depuis la base de données
function ConfEditor() {
	this.data = [
		{% for confidentialite in confidentialites %}
		{ id:'{{ confidentialite.id }}', name:'{{ confidentialite.confidentialiteName }}' },
		{% endfor %}
	];

	this.confEditor = {
		data:this.data,
		type:'default',
		autocomplete:true,
		multiple:false,
	};
}

ConfEditor.prototype = new ObjectEditor();
</script>

<script>
// Fonction permettant à Ag-Grid de récupérer les typologies, depuis la base de données
function TypoEditor() {
	this.data = [
		{% for type in types %}
		{ id:'{{ type.id }}', name:'{{ type.shortName }}' },
		{% endfor %}
	];

	this.confEditor = {
		data:this.data,
		type:'default',
		autocomplete:true,
		multiple:false,
	};
}

TypoEditor.prototype = new ObjectEditor();
</script>

<script>
function SupEditor() {
// Fonction permettant à Ag-Grid de récupérer les supports SI, qui n'est autre que la liste des noms usuels, depuis la base de données
	this.data = [
		{% for systeme_information in systeme_informations %}
		{ id:'{{ systeme_information.id }}', name:'{{ systeme_information.usualName }}' },
		{% endfor %}
	];

	this.confEditor = {
		data:this.data,
		type:'default',
		autocomplete:true,
		multiple:true,
	};

}

SupEditor.prototype = new ObjectEditor();
</script>

<script>
// Création du tableau, et incorporation des données dans une grille. 
var columns = [
	{headerName: 'ID', field: 'id', sortable: true, filter: true},
	{headerName: 'Nom usuel', field: 'usual_name', sortable: true, filter: true, editable: true},
	{headerName: 'Nom SII', field: 'sii_name', sortable: true, filter: true, editable: true},
	{headerName: 'Description', field: 'description', sortable: true, filter: true, editable: true},
	{headerName: 'Confidentialité', field: 'confidentialite', sortable: true, filter: true, editable: true, cellRenderer: ObjectCellRenderer,cellEditor: ConfEditor},
    {headerName: 'Typologie MI', field: 'typology', sortable: true, filter: true, editable: true, cellRenderer: ObjectCellRenderer,cellEditor: TypoEditor},
    {headerName: 'Domaine', field: 'domaine', sortable: true, filter: true, editable: true, cellRenderer: ObjectCellRenderer,cellEditor: DomEditor},
    {headerName: 'SI Support', field: 'si_support', sortable: true, filter: true, editable: true, cellRenderer: ObjectCellRenderer,cellEditor: SupEditor},
];

var gridOptions = {
    columnDefs: columns,
	rowData:
	[
		{% for systeme_information in systeme_informations %}
			{
			id:'{{ systeme_information.id }}',
			usual_name: '{{ systeme_information.usualName }}',
			sii_name: '{{ systeme_information.siiName }}',
			description:'{{ systeme_information.description }}',
			domaine: {'id':'{{ systeme_information.domaine.id }}', 'val':'{{ systeme_information.domaine.domaineName }}' },
			confidentialite: {'id':'{{ systeme_information.confidentialite.id }}', 'val':'{{ systeme_information.confidentialite.confidentialiteName }}' },
			typology: {'id':'{{ systeme_information.type.id }}', 'val':'{{ systeme_information.type.shortName }}' },
			si_support:	{'id':'{% for sisupport in systeme_information.SystemeSupport %}{{ sisupport.id }}{% if not loop.last %};{% endif %}{% endfor %}', 'val':'{% for sisupport in systeme_information.SystemeSupport %}{{ sisupport.usualName }}{% if not loop.last %};{% endif %}{% endfor %}'}
			},
		{% endfor %}
	],
	rowSelection: 'multiple',
    rowDeselection: true,
    rowDragManaged: true,
  	animateRows: true,
    sideBar: true,

// Fonction permettant de prendre en compte la requête et de la convertir en JSON
	onCellValueChanged: function(event) {
		console.log(event);
		matransaction = "{\"idrow\":"+event.node.id+", \"operation\": \"addupdate\", \"data\":"+ JSON.stringify(event.data) + "}";
		if(document.getElementById("affichage").innerHTML=="") {
			document.getElementById("affichage").innerHTML = matransaction ;
		}
		else {
			document.getElementById("affichage").innerHTML += ',' + matransaction;
		}

		console.log('Data after change is', event.data);
	  },
	  onRowDataUpdated:function(event) {
	  console.log("RowDataUpdated");
		console.log(event);
		}
};

</script>
{% endblock %}

{% block javascripts %}
<script src="{{ asset('aggrid/endmain.js') }}"></script>

{% endblock %}
